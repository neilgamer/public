<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxh.job.mapper.PersonMapper">
  <resultMap id="BaseResultMap" type="com.zxh.job.pojo.Person">
    <id column="p_id" jdbcType="INTEGER" property="p_id" />
    <result column="p_name" jdbcType="VARCHAR" property="p_name" />
    <result column="p_password" jdbcType="VARCHAR" property="p_password" />
    <result column="p_fullname" jdbcType="VARCHAR" property="p_fullname" />
    <result column="p_email" jdbcType="VARCHAR" property="p_email" />
    <result column="p_phone" jdbcType="VARCHAR" property="p_phone" />
    <result column="p_sex" jdbcType="BIT" property="p_sex" />
    <result column="p_birthday" jdbcType="DATE" property="p_birthday" />
    <result column="p_school" jdbcType="VARCHAR" property="p_school" />
    <result column="p_graduate" jdbcType="BIT" property="p_graduate" />
    <result column="p_introduction" jdbcType="VARCHAR" property="p_introduction" />
    <result column="p_qualifications" jdbcType="VARCHAR" property="p_qualifications" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    p_id, p_name, p_password, p_fullname, p_email, p_phone, p_sex, p_birthday, p_school, 
    p_graduate, p_introduction, p_qualifications
  </sql>
  <select id="selectByExample" parameterType="com.zxh.job.pojo.PersonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person
    where p_id = #{p_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person
    where p_id = #{p_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="p_id" keyProperty="p_id" parameterType="com.zxh.job.pojo.Person" useGeneratedKeys="true">
    insert into person (p_name, p_password, p_fullname, 
      p_email, p_phone, p_sex, 
      p_birthday, p_school, p_graduate, 
      p_introduction, p_qualifications)
    values (#{p_name,jdbcType=VARCHAR}, #{p_password,jdbcType=VARCHAR}, #{p_fullname,jdbcType=VARCHAR}, 
      #{p_email,jdbcType=VARCHAR}, #{p_phone,jdbcType=VARCHAR}, #{p_sex,jdbcType=BIT}, 
      #{p_birthday,jdbcType=DATE}, #{p_school,jdbcType=VARCHAR}, #{p_graduate,jdbcType=BIT}, 
      #{p_introduction,jdbcType=VARCHAR}, #{p_qualifications,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="p_id" keyProperty="p_id" parameterType="com.zxh.job.pojo.Person" useGeneratedKeys="true">
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="p_name != null">
        p_name,
      </if>
      <if test="p_password != null">
        p_password,
      </if>
      <if test="p_fullname != null">
        p_fullname,
      </if>
      <if test="p_email != null">
        p_email,
      </if>
      <if test="p_phone != null">
        p_phone,
      </if>
      <if test="p_sex != null">
        p_sex,
      </if>
      <if test="p_birthday != null">
        p_birthday,
      </if>
      <if test="p_school != null">
        p_school,
      </if>
      <if test="p_graduate != null">
        p_graduate,
      </if>
      <if test="p_introduction != null">
        p_introduction,
      </if>
      <if test="p_qualifications != null">
        p_qualifications,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="p_name != null">
        #{p_name,jdbcType=VARCHAR},
      </if>
      <if test="p_password != null">
        #{p_password,jdbcType=VARCHAR},
      </if>
      <if test="p_fullname != null">
        #{p_fullname,jdbcType=VARCHAR},
      </if>
      <if test="p_email != null">
        #{p_email,jdbcType=VARCHAR},
      </if>
      <if test="p_phone != null">
        #{p_phone,jdbcType=VARCHAR},
      </if>
      <if test="p_sex != null">
        #{p_sex,jdbcType=BIT},
      </if>
      <if test="p_birthday != null">
        #{p_birthday,jdbcType=DATE},
      </if>
      <if test="p_school != null">
        #{p_school,jdbcType=VARCHAR},
      </if>
      <if test="p_graduate != null">
        #{p_graduate,jdbcType=BIT},
      </if>
      <if test="p_introduction != null">
        #{p_introduction,jdbcType=VARCHAR},
      </if>
      <if test="p_qualifications != null">
        #{p_qualifications,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zxh.job.pojo.Person">
    update person
    <set>
      <if test="p_name != null">
        p_name = #{p_name,jdbcType=VARCHAR},
      </if>
      <if test="p_password != null">
        p_password = #{p_password,jdbcType=VARCHAR},
      </if>
      <if test="p_fullname != null">
        p_fullname = #{p_fullname,jdbcType=VARCHAR},
      </if>
      <if test="p_email != null">
        p_email = #{p_email,jdbcType=VARCHAR},
      </if>
      <if test="p_phone != null">
        p_phone = #{p_phone,jdbcType=VARCHAR},
      </if>
      <if test="p_sex != null">
        p_sex = #{p_sex,jdbcType=BIT},
      </if>
      <if test="p_birthday != null">
        p_birthday = #{p_birthday,jdbcType=DATE},
      </if>
      <if test="p_school != null">
        p_school = #{p_school,jdbcType=VARCHAR},
      </if>
      <if test="p_graduate != null">
        p_graduate = #{p_graduate,jdbcType=BIT},
      </if>
      <if test="p_introduction != null">
        p_introduction = #{p_introduction,jdbcType=VARCHAR},
      </if>
      <if test="p_qualifications != null">
        p_qualifications = #{p_qualifications,jdbcType=VARCHAR},
      </if>
    </set>
    where p_id = #{p_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zxh.job.pojo.Person">
    update person
    set p_name = #{p_name,jdbcType=VARCHAR},
      p_password = #{p_password,jdbcType=VARCHAR},
      p_fullname = #{p_fullname,jdbcType=VARCHAR},
      p_email = #{p_email,jdbcType=VARCHAR},
      p_phone = #{p_phone,jdbcType=VARCHAR},
      p_sex = #{p_sex,jdbcType=BIT},
      p_birthday = #{p_birthday,jdbcType=DATE},
      p_school = #{p_school,jdbcType=VARCHAR},
      p_graduate = #{p_graduate,jdbcType=BIT},
      p_introduction = #{p_introduction,jdbcType=VARCHAR},
      p_qualifications = #{p_qualifications,jdbcType=VARCHAR}
    where p_id = #{p_id,jdbcType=INTEGER}
  </update>
</mapper>